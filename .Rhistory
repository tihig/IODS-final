q()
fread(http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt)
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
structure(lrn14)
dim(lrn14)
View(lrn14)
the dimensions of the data
dim(lrn14)
# look at the structure of the data
str(lrn14)
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
library(dplyr)
install.packages(dplyr)
.libPaths()
install.packages(dplyr)
install(dplyr)
probabilities <- predict(m, type = "response")
library(dplyr)
alc <- read.csv("data/alc.csv")
library(tidyr); library(dplyr); library(ggplot2)
variables <- c("high_use","failures","studytime","health","famsup", "absences")
alc_hyp <- select(alc, one_of(variables))
library(gridExtra)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc_hyp$high_use, prob = alc_hyp$probability)
library(MASS)
data("Boston")
library(tidyr)
install.packages("tidyverse")
install.packages("corrplot")
library(MASS)
library(tidyverse)
library(corrplot)
data("Boston")
colnames(Boston)
test <- dplyr::select(test, -crime)
?scaled
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
Meta file
cname(3)
colnames(hd)
new_names <- c("HDI.Ranks" = "Rank", "Country" = "Country", "Human.Development.Index..HDI" = "HDI", "Expected.Years.of.Education" = "eyearsedu", "Gross.National.Income..GNI..per.Capita" = "GNI", "GNI.per.Capita.Rank.Minus.HDI.Rank" = "GNImHDI" )
rename(hd, new_names)
library(plyr)
rename(hd, new_names)
colnames(hd)
rename(hd, c("HDI.Ranks" ="Rank"))
rename(hd, c("HDI.Rank" ="Rank"))
rename(hd, new_names)
colnames(hd)
rename(hd, new_names)
rename(hd, c("HDI.Rank" = "Rank")
colnames(hd)
rename(hd, c("HDI.Rank" = "Rank"))
colnames(hd)
colnames(hd)
rename(hd, c("HDI.Rank" = "Rank"))
View(hd)
View(hd)
new_names <- c("Rank", "Country", "HDI", "eyearsedu",  "GNI", "GNImHDI" )
colnames(hd) <-new_names
colnames(hd)
View(hd)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
View(hd)
new_names <- c("Rank", "Country", "HDI", "eyearsedu", "expectedEDU", "meanEDU"  "GNI", "GNImHDI" )
library(plyr)
new_names <- c("Rank", "Country", "HDI", "eyearsedu", "expectedEDU", "meanEDU" , "GNI", "GNImHDI" )
colnames(hd) <-new_names
colnames(hd)
View(gii)
View(gii)
new_gii <- c("Rank", "Country", "GII", "materMort", "adBirth", "reprParl", "secEdF", "secEdM", "labourF", "labourM")
new_hd <- c("Rank", "Country", "HDI", "eYearsEdu", "expectedEDU", "meanEDU" , "GNI", "GNImHDI" )
colnames(hd) <-new_hd
colnames(gii) <-new_gii
colnames(hd)
colnames(gii)
install.packages("plotly")
install.packages("Plotly")
install.packages("plotly")
library(plotly)
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', color = test$crime)
human <- mutate(human, as.numeric(gii)
human <- mutate(human, as.numeric(gii))
human <- mutate(human, as.numeric(gii))
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
colnames(hd)
#named them with my own names
new_hd <- c("Rank", "Country", "HDI", "eYearsEdu", "expectedEDU", "meanEDU" , "GNI", "GNImHDI" )
new_gii <- c("Rank", "Country", "GII", "materMort", "adBirth", "reprParl", "secEdF", "secEdM", "labourF", "labourM")
colnames(hd) <-new_hd
colnames(gii) <-new_gii
colnames(hd)
colnames(gii)
library(dplyr); library(ggplot2)
gii <- mutate(gii, eduFM = (secEdF / secEdM))
gii <- mutate(gii, labourFM = (labourF / labourM))
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
dim(human)
write.csv(human, file="human.csv", row.names= FALSE)
human <- mutate(human, as.numeric(gii))
human <- mutate(human, as.numeric(GNI))
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
colnames(hd)
#named them with my own names
new_hd <- c("Rank", "Country", "HDI", "eYearsEdu", "expectedEDU", "meanEDU" , "GNI", "GNImHDI" )
new_gii <- c("Rank", "Country", "GII", "materMort", "adBirth", "reprParl", "secEdF", "secEdM", "labourF", "labourM")
colnames(hd) <-new_hd
colnames(gii) <-new_gii
colnames(hd)
colnames(gii)
library(dplyr); library(ggplot2)
gii <- mutate(gii, eduFM = (secEdF / secEdM))
gii <- mutate(gii, labourFM = (labourF / labourM))
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
dim(human)
write.csv(human, file="human.csv", row.names= FALSE)
human <- mutate(human, as.numeric(GNI))
human <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt"", sep = ";", header = TRUE)
human <- mutate(human, as.numeric(GNI))
keep_columns <- c("Country", "EduFM", "LabourFM", "expectedEDU", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep = ";", header = TRUE)
str(human)
human <- mutate(human, as.numeric(GNI))
colnames(human)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
colnames(hd)
#named them with my own names
new_hd <- c("Rank", "Country", "HDI", "eYearsEdu", "expectedEDU", "meanEDU" , "GNI", "GNImHDI" )
new_gii <- c("Rank", "Country", "GII", "materMort", "adBirth", "reprParl", "secEdF", "secEdM", "labourF", "labourM")
colnames(hd) <-new_hd
colnames(gii) <-new_gii
colnames(hd)
colnames(gii)
library(dplyr); library(ggplot2)
gii <- mutate(gii, eduFM = (secEdF / secEdM))
gii <- mutate(gii, labourFM = (labourF / labourM))
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
dim(human)
write.csv(human, file="human.csv", row.names= FALSE)
colnames(human)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
colnames(hd)
new_hd <- c("HDI.Rank","Country","HDI","Life.Exp","Edu.Exp","Edu.Mean","GNI","GNI.Minus.Rank")
colnames(hd) <-new_hd
colnames(hd)
new_gii <- c("GII.Rank", "Country", "GII","Mat.Mor","Ado.Birth","Parli.F","Edu2.F","Edu2.M","Labo.F","Labo.M")
colnames(gii) <-new_gii
colnames(gii)
library(dplyr); library(ggplot2)
gii <- mutate(gii, Edu2.FM = (secEdF / secEdM))
gii <- mutate(gii, Labo.FM = (labourF / labourM))
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
dim(human)
write.csv(human, file="human.csv", row.names= FALSE)
colnames(human)
keep_columns <- c("Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
select(human, one_of(c))
select(human, one_of(keep_columns))
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
colnames(hd)
#named them with my own names
new_hd <- c("HDI.Rank","Country","HDI","Life.Exp","Edu.Exp","Edu.Mean","GNI","GNI.Minus.Rank")
new_gii <- c("GII.Rank", "Country", "GII","Mat.Mor","Ado.Birth","Parli.F","Edu2.F","Edu2.M","Labo.F","Labo.M")
colnames(hd) <-new_hd
colnames(gii) <-new_gii
colnames(hd)
colnames(gii)
library(dplyr); library(ggplot2)
gii <- mutate(gii, Edu2.FM = (secEdF / secEdM))
gii <- mutate(gii, Labo.FM = (labourF / labourM))
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
dim(human)
write.csv(human, file="human.csv", row.names= FALSE)
colnames(human)
colnames(gii)
gii <- mutate(gii, Edu2.FM = (secEdF / secEdM))
gii <- mutate(gii, Labo.FM = (labourF / labourM))
gii <- mutate(gii, Edu2.FM = (Edu2.F / Edu2.M))
gii <- mutate(gii, Edu2.FM = (Edu2.F / Edu2.M))
gii <- mutate(gii, Labo.FM = (Labo.F / Labo.M))
colnames(gii)
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
dim(human)
write.csv(human, file="human.csv", row.names= FALSE)
colnames(human)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
colnames(hd)
#named them with my own names
new_hd <- c("HDI.Rank","Country","HDI","Life.Exp","Edu.Exp","Edu.Mean","GNI","GNI.Minus.Rank")
new_gii <- c("GII.Rank", "Country", "GII","Mat.Mor","Ado.Birth","Parli.F","Edu2.F","Edu2.M","Labo.F","Labo.M")
colnames(hd) <-new_hd
colnames(gii) <-new_gii
colnames(hd)
colnames(gii)
library(dplyr); library(ggplot2)
gii <- mutate(gii, Edu2.FM = (Edu2.F / Edu2.M))
gii <- mutate(gii, Labo.FM = (Labo.F / Labo.M))
colnames(gii)
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
dim(human)
write.csv(human, file="human.csv", row.names= FALSE)
colnames(human)
human <- mutate(human, as.numeric(GNI))
keep_columns <- c("Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
select(human, one_of(keep_columns))
complete.cases(human)
complete.cases(human)
human_ <- filter(human, complete.cases(human)== TRUE)
human_$Country
human$Country
human<-select(human, one_of(keep_columns))
colnames(human)
human <- mutate(human, as.numeric(GNI))
keep_columns <- c("Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human<-select(human, one_of(keep_columns))
complete.cases(human)
human_ <- filter(human, complete.cases(human)== TRUE)
human$Country
tail(human, n=10L)
tail(human, n=7L)
last <- nrow(human) - 7
human_ <- human[1:last, ]
human_$Country
rownames(human_) <- human_$Country
keep_columns <- c("Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human_<-select(human_, one_of(keep_columns))
dim(human_)
human_ <- human_[ ,2:ncol(human_)]
dim(human_)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
colnames(hd)
#named them with my own names
new_hd <- c("HDI.Rank","Country","HDI","Life.Exp","Edu.Exp","Edu.Mean","GNI","GNI.Minus.Rank")
new_gii <- c("GII.Rank", "Country", "GII","Mat.Mor","Ado.Birth","Parli.F","Edu2.F","Edu2.M","Labo.F","Labo.M")
colnames(hd) <-new_hd
colnames(gii) <-new_gii
colnames(hd)
colnames(gii)
library(dplyr); library(ggplot2)
gii <- mutate(gii, Edu2.FM = (Edu2.F / Edu2.M))
gii <- mutate(gii, Labo.FM = (Labo.F / Labo.M))
colnames(gii)
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
dim(human)
write.csv(human, file="human.csv", row.names= FALSE)
# Chapter 5 begins here
colnames(human)
human <- mutate(human, as.numeric(GNI))
keep_columns <- c("Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human<-select(human, one_of(keep_columns))
complete.cases(human)
human_ <- filter(human, complete.cases(human)== TRUE)
human$Country
last <- nrow(human) - 7
human_ <- human[1:last, ]
rownames(human_) <- human_$Country
human_ <- human_[ ,2:ncol(human_)]
dim(human_)
dim(human)
dim(human)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
colnames(hd)
#named them with my own names
new_hd <- c("HDI.Rank","Country","HDI","Life.Exp","Edu.Exp","Edu.Mean","GNI","GNI.Minus.Rank")
new_gii <- c("GII.Rank", "Country", "GII","Mat.Mor","Ado.Birth","Parli.F","Edu2.F","Edu2.M","Labo.F","Labo.M")
colnames(hd) <-new_hd
colnames(gii) <-new_gii
colnames(hd)
colnames(gii)
library(dplyr); library(ggplot2)
gii <- mutate(gii, Edu2.FM = (Edu2.F / Edu2.M))
gii <- mutate(gii, Labo.FM = (Labo.F / Labo.M))
colnames(gii)
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
dim(human)
write.csv(human, file="human.csv", row.names= FALSE)
# Chapter 5 begins here
colnames(human)
human <- mutate(human, as.numeric(GNI))
keep_columns <- c("Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human<-select(human, one_of(keep_columns))
complete.cases(human)
human_ <- filter(human, complete.cases(human)== TRUE)
dim(human)
complete.cases(human)
human_ <- filter(human, complete.cases(human)== TRUE)
dim(human)
complete.cases(human)
dim(human_)
last <- nrow(human_) - 7
human_ <- human_[1:last, ]
rownames(human_) <- human_$Country
human_ <- human_[ ,2:ncol(human_)]
dim(human_)
human <- human_
write.csv(human, file="human.csv", row.names= TRUE)
setwd("~/GitHub/IODS-final")
alc <- read.csv("./IODS-project/data/learning2014.csv")
alc <- read.csv("../IODS-project/data/learning2014.csv")
learn <- read.csv("../IODS-project/data/learning2014.csv")
summary(learn)
# tihig, 26.1.2017, this is first script of chapter 2
# http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
# structure looks pretty messy, there's loads of shortnings like SU01 or Aa.
#In the end there's some readable columns, like Age and Gender
structure(lrn14)
#has two numbers: 183 and 60 (objects and variables)
dim(lrn14)
install.packages("GGally")
library(dplyr)
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D07","D14","D22","D30")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
keep_columns <- c("gender","Age","Attitude", "deep", "stra", "surf", "Points")
learning2014 <- select(lrn14, one_of(keep_columns))
learning2014 <- filter(learning2014, Points > 0)
dim(learning2014)
write.csv(learning2014, file = "learning2014.csv", row.names = FALSE)
read.csv("learning2014.csv")
str(learning2014)
lrn14 <- read.csv("learning2014.csv")
learn <- read.csv("../IODS-project/data/learning2014.csv")
summary(learn)
keep_columns <- ("gender", "Age", "Attitude", "deep", "stra", "surf", "Points");
keep_columns <- c("gender", "Age", "Attitude", "deep", "stra", "surf", "Points");
select(learn, one_of(keep_columns))
summary(learn)
learn <- select(learn, one_of(keep_columns))
summary(learn)
dim(learn)
learn$att_points
learn <- mutate(learn, att_points = (Attitude + Points) / 2)
learn$att_points
plot(learn$att_points)
learn <- mutate(learn, high_points = att_points > 25)
learn$high_points
m <- glm(high_points ~ deep + stra + surf, data = learn, family = "binomial")
summary(m)
# print out the coefficients of the model
coef(m)
m <- glm(high_points ~ Age + stra + gender, data = learn, family = "binomial")
summary(m)
coef(m)
m <- glm(high_points ~ Age + surf + gender, data = learn, family = "binomial")
summary(m)
m <- glm(high_points ~ Age + deep + gender, data = learn, family = "binomial")
summary(m)
m <- glm(high_points ~ Age + stra + gender, data = learn, family = "binomial")
summary(m)
m <- glm(high_points ~ Age + gender, data = learn, family = "binomial")
summary(m)
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
str(lrn14)
lrn14 <- mutate(lrn14, Interest = De + Dc)
lrn$Interest
lrn14$Interest
