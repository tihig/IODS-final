plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', color = test$crime)
human <- mutate(human, as.numeric(gii)
human <- mutate(human, as.numeric(gii))
human <- mutate(human, as.numeric(gii))
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
colnames(hd)
#named them with my own names
new_hd <- c("Rank", "Country", "HDI", "eYearsEdu", "expectedEDU", "meanEDU" , "GNI", "GNImHDI" )
new_gii <- c("Rank", "Country", "GII", "materMort", "adBirth", "reprParl", "secEdF", "secEdM", "labourF", "labourM")
colnames(hd) <-new_hd
colnames(gii) <-new_gii
colnames(hd)
colnames(gii)
library(dplyr); library(ggplot2)
gii <- mutate(gii, eduFM = (secEdF / secEdM))
gii <- mutate(gii, labourFM = (labourF / labourM))
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
dim(human)
write.csv(human, file="human.csv", row.names= FALSE)
human <- mutate(human, as.numeric(gii))
human <- mutate(human, as.numeric(GNI))
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
colnames(hd)
#named them with my own names
new_hd <- c("Rank", "Country", "HDI", "eYearsEdu", "expectedEDU", "meanEDU" , "GNI", "GNImHDI" )
new_gii <- c("Rank", "Country", "GII", "materMort", "adBirth", "reprParl", "secEdF", "secEdM", "labourF", "labourM")
colnames(hd) <-new_hd
colnames(gii) <-new_gii
colnames(hd)
colnames(gii)
library(dplyr); library(ggplot2)
gii <- mutate(gii, eduFM = (secEdF / secEdM))
gii <- mutate(gii, labourFM = (labourF / labourM))
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
dim(human)
write.csv(human, file="human.csv", row.names= FALSE)
human <- mutate(human, as.numeric(GNI))
human <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt"", sep = ";", header = TRUE)
human <- mutate(human, as.numeric(GNI))
keep_columns <- c("Country", "EduFM", "LabourFM", "expectedEDU", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep = ";", header = TRUE)
str(human)
human <- mutate(human, as.numeric(GNI))
colnames(human)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
colnames(hd)
#named them with my own names
new_hd <- c("Rank", "Country", "HDI", "eYearsEdu", "expectedEDU", "meanEDU" , "GNI", "GNImHDI" )
new_gii <- c("Rank", "Country", "GII", "materMort", "adBirth", "reprParl", "secEdF", "secEdM", "labourF", "labourM")
colnames(hd) <-new_hd
colnames(gii) <-new_gii
colnames(hd)
colnames(gii)
library(dplyr); library(ggplot2)
gii <- mutate(gii, eduFM = (secEdF / secEdM))
gii <- mutate(gii, labourFM = (labourF / labourM))
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
dim(human)
write.csv(human, file="human.csv", row.names= FALSE)
colnames(human)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
colnames(hd)
new_hd <- c("HDI.Rank","Country","HDI","Life.Exp","Edu.Exp","Edu.Mean","GNI","GNI.Minus.Rank")
colnames(hd) <-new_hd
colnames(hd)
new_gii <- c("GII.Rank", "Country", "GII","Mat.Mor","Ado.Birth","Parli.F","Edu2.F","Edu2.M","Labo.F","Labo.M")
colnames(gii) <-new_gii
colnames(gii)
library(dplyr); library(ggplot2)
gii <- mutate(gii, Edu2.FM = (secEdF / secEdM))
gii <- mutate(gii, Labo.FM = (labourF / labourM))
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
dim(human)
write.csv(human, file="human.csv", row.names= FALSE)
colnames(human)
keep_columns <- c("Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
select(human, one_of(c))
select(human, one_of(keep_columns))
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
colnames(hd)
#named them with my own names
new_hd <- c("HDI.Rank","Country","HDI","Life.Exp","Edu.Exp","Edu.Mean","GNI","GNI.Minus.Rank")
new_gii <- c("GII.Rank", "Country", "GII","Mat.Mor","Ado.Birth","Parli.F","Edu2.F","Edu2.M","Labo.F","Labo.M")
colnames(hd) <-new_hd
colnames(gii) <-new_gii
colnames(hd)
colnames(gii)
library(dplyr); library(ggplot2)
gii <- mutate(gii, Edu2.FM = (secEdF / secEdM))
gii <- mutate(gii, Labo.FM = (labourF / labourM))
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
dim(human)
write.csv(human, file="human.csv", row.names= FALSE)
colnames(human)
colnames(gii)
gii <- mutate(gii, Edu2.FM = (secEdF / secEdM))
gii <- mutate(gii, Labo.FM = (labourF / labourM))
gii <- mutate(gii, Edu2.FM = (Edu2.F / Edu2.M))
gii <- mutate(gii, Edu2.FM = (Edu2.F / Edu2.M))
gii <- mutate(gii, Labo.FM = (Labo.F / Labo.M))
colnames(gii)
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
dim(human)
write.csv(human, file="human.csv", row.names= FALSE)
colnames(human)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
colnames(hd)
#named them with my own names
new_hd <- c("HDI.Rank","Country","HDI","Life.Exp","Edu.Exp","Edu.Mean","GNI","GNI.Minus.Rank")
new_gii <- c("GII.Rank", "Country", "GII","Mat.Mor","Ado.Birth","Parli.F","Edu2.F","Edu2.M","Labo.F","Labo.M")
colnames(hd) <-new_hd
colnames(gii) <-new_gii
colnames(hd)
colnames(gii)
library(dplyr); library(ggplot2)
gii <- mutate(gii, Edu2.FM = (Edu2.F / Edu2.M))
gii <- mutate(gii, Labo.FM = (Labo.F / Labo.M))
colnames(gii)
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
dim(human)
write.csv(human, file="human.csv", row.names= FALSE)
colnames(human)
human <- mutate(human, as.numeric(GNI))
keep_columns <- c("Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
select(human, one_of(keep_columns))
complete.cases(human)
complete.cases(human)
human_ <- filter(human, complete.cases(human)== TRUE)
human_$Country
human$Country
human<-select(human, one_of(keep_columns))
colnames(human)
human <- mutate(human, as.numeric(GNI))
keep_columns <- c("Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human<-select(human, one_of(keep_columns))
complete.cases(human)
human_ <- filter(human, complete.cases(human)== TRUE)
human$Country
tail(human, n=10L)
tail(human, n=7L)
last <- nrow(human) - 7
human_ <- human[1:last, ]
human_$Country
rownames(human_) <- human_$Country
keep_columns <- c("Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human_<-select(human_, one_of(keep_columns))
dim(human_)
human_ <- human_[ ,2:ncol(human_)]
dim(human_)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
colnames(hd)
#named them with my own names
new_hd <- c("HDI.Rank","Country","HDI","Life.Exp","Edu.Exp","Edu.Mean","GNI","GNI.Minus.Rank")
new_gii <- c("GII.Rank", "Country", "GII","Mat.Mor","Ado.Birth","Parli.F","Edu2.F","Edu2.M","Labo.F","Labo.M")
colnames(hd) <-new_hd
colnames(gii) <-new_gii
colnames(hd)
colnames(gii)
library(dplyr); library(ggplot2)
gii <- mutate(gii, Edu2.FM = (Edu2.F / Edu2.M))
gii <- mutate(gii, Labo.FM = (Labo.F / Labo.M))
colnames(gii)
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
dim(human)
write.csv(human, file="human.csv", row.names= FALSE)
# Chapter 5 begins here
colnames(human)
human <- mutate(human, as.numeric(GNI))
keep_columns <- c("Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human<-select(human, one_of(keep_columns))
complete.cases(human)
human_ <- filter(human, complete.cases(human)== TRUE)
human$Country
last <- nrow(human) - 7
human_ <- human[1:last, ]
rownames(human_) <- human_$Country
human_ <- human_[ ,2:ncol(human_)]
dim(human_)
dim(human)
dim(human)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
colnames(hd)
#named them with my own names
new_hd <- c("HDI.Rank","Country","HDI","Life.Exp","Edu.Exp","Edu.Mean","GNI","GNI.Minus.Rank")
new_gii <- c("GII.Rank", "Country", "GII","Mat.Mor","Ado.Birth","Parli.F","Edu2.F","Edu2.M","Labo.F","Labo.M")
colnames(hd) <-new_hd
colnames(gii) <-new_gii
colnames(hd)
colnames(gii)
library(dplyr); library(ggplot2)
gii <- mutate(gii, Edu2.FM = (Edu2.F / Edu2.M))
gii <- mutate(gii, Labo.FM = (Labo.F / Labo.M))
colnames(gii)
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
dim(human)
write.csv(human, file="human.csv", row.names= FALSE)
# Chapter 5 begins here
colnames(human)
human <- mutate(human, as.numeric(GNI))
keep_columns <- c("Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human<-select(human, one_of(keep_columns))
complete.cases(human)
human_ <- filter(human, complete.cases(human)== TRUE)
dim(human)
complete.cases(human)
human_ <- filter(human, complete.cases(human)== TRUE)
dim(human)
complete.cases(human)
dim(human_)
last <- nrow(human_) - 7
human_ <- human_[1:last, ]
rownames(human_) <- human_$Country
human_ <- human_[ ,2:ncol(human_)]
dim(human_)
human <- human_
write.csv(human, file="human.csv", row.names= TRUE)
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D07","D14","D22","D30")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
#Data wrangling here
# Hypothesis: high interest in statistics correlates with attitude and points in exam
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
str(lrn14)
#making variable Interest into the data set
lrn14 <- mutate(lrn14, Interest = De + Dc)
lrn14$Interest
lrn14 <- mutate(lrn14, Interest = De + Dc)
library(dplyr); library(ggplot2)
# Hypothesis: high interest in statistics correlates with attitude and points in exam
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
str(lrn14)
#making variable Interest into the data set
lrn14 <- mutate(lrn14, Interest = De + Dc)
lrn14$Interest
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D07","D14","D22","D30")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns
keep_columns <- c("gender","Age","Attitude", "deep", "stra", "surf", "Points", "Interest")
learning2014 <- select(lrn14, one_of(keep_columns))
keep_columns <- c("gender","Age","Attitude", "deep", "stra", "surf", "Points", "Interest")
learning2014 <- select(lrn14, one_of(keep_columns))
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
learning2014 <- select(lrn14, one_of(keep_columns))
learning2014
str(learning2014)
learn <- select(lrn14, one_of(keep_columns))
View(learning2014)
View(learning2014)
learn <- mutate(learn, att_points = (Attitude + Points) / 2)
plot(learn$att_points)
learn <- mutate(learn, high_points = att_points > 25)
learn$high_points
m <- glm(high_points ~ Interest, data = learn, family = "binomial")
summary(m)
coef(m)
plot(m)
# tihig 7.2.2017 students alcohol consupmtion
#data source: https://archive.ics.uci.edu/ml/machine-learning-databases/00356/
mat <- read.csv("student-mat.csv", sep = ";", header = TRUE)
por <- read.csv("student-por.csv", sep= ";", header = TRUE)
str(mat)
str(por)
dim(mat)
dim(por)
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
mat_por <- inner_join(mat, por, by = join_by, suffix = c(".mat", ".por"))
alc <- select(mat_por, one_of(join_by))
notjoined_columns <- colnames(mat)[!colnames(mat) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
two_columns <- select(mat_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
# tihig 7.2.2017 students alcohol consupmtion
#data source: https://archive.ics.uci.edu/ml/machine-learning-databases/00356/
mat <- read.csv("student-mat.csv", sep = ";", header = TRUE)
por <- read.csv("student-por.csv", sep= ";", header = TRUE)
str(mat)
str(por)
dim(mat)
dim(por)
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
mat_por <- inner_join(mat, por, by = join_by, suffix = c(".mat", ".por"))
alc <- select(mat_por, one_of(join_by))
notjoined_columns <- colnames(mat)[!colnames(mat) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
two_columns <- select(mat_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
# tihig 7.2.2017 students alcohol consupmtion
#data source: https://archive.ics.uci.edu/ml/machine-learning-databases/00356/
mat <- read.csv("student-mat.csv", sep = ";", header = TRUE)
por <- read.csv("student-por.csv", sep= ";", header = TRUE)
str(mat)
str(por)
dim(mat)
dim(por)
library(dplyr)
setwd("~/GitHub/IODS-project/data")
# tihig 7.2.2017 students alcohol consupmtion
#data source: https://archive.ics.uci.edu/ml/machine-learning-databases/00356/
mat <- read.csv("student-mat.csv", sep = ";", header = TRUE)
por <- read.csv("student-por.csv", sep= ";", header = TRUE)
str(mat)
str(por)
dim(mat)
dim(por)
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
mat_por <- inner_join(mat, por, by = join_by, suffix = c(".mat", ".por"))
alc <- select(mat_por, one_of(join_by))
notjoined_columns <- colnames(mat)[!colnames(mat) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
two_columns <- select(mat_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
summary(Dalc)
summary(alc)
summary(learn)
summary(learn)
str(learn$att_points)
mean(learn$att_points)
learn <- mutate(learn, high_points = att_points > 26)
summary(learn)
glimpse(learn)
write.csv(learn, "learn.csv", row.names = FALSE)
lrn <- read.csv("learn.csv")
summary(lrn)
learn<- read.csv("learn.csv")
setwd("~/GitHub/IODS-final")
knitr::opts_chunk$set(echo = TRUE)
learn<- read.csv("learn.csv")
setwd("~/GitHub/IODS-final")
write.csv(learn, "learn.csv", row.names = FALSE)
learn<- read.csv("learn.csv")
keep_columns <- c("gender","Age","Attitude", "deep", "stra", "surf", "Points", "Interest", "high_points")
learn <- select(lrn14, one_of(keep_columns))
#Data wrangling here
library(dplyr); library(ggplot2)
# Hypothesis: people who on average get high points in exam and attitude towards statistics score high in interest
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
str(lrn14)
#making variable Interest into the data set
lrn14 <- mutate(lrn14, Interest = De + Dc)
lrn14$Interest
#Creating the varaibles deep, stra and surf like in exercises
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D07","D14","D22","D30")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
summary(learn)
dim(learn)
#Creating new variable att_points= average of attitude and points
learn <- mutate(learn, att_points = (Attitude + Points) / 2)
# Calculate mean 25.9071
mean(learn$att_points)
#Creating new variable high_points that is true if att_points is greater than 26 (above mean)
learn <- mutate(learn, high_points = att_points > 26)
keep_columns <- c("gender","Age","Attitude", "deep", "stra", "surf", "Points", "Interest", "high_points")
learn <- select(lrn14, one_of(keep_columns))
keep_columns <- c("gender","Age","Attitude", "deep", "stra", "surf", "Points", "Interest", "high_points")
learn <- select(lrn14, one_of(keep_columns))
summary(learn)
learn <- mutate(learn, high_points = att_points > 26)
learn <- mutate(learn, att_points = (Attitude + Points) / 2)
mean(learn$att_points)
learn <- mutate(learn, high_points = att_points > 26)
keep_columns <- c("gender","Age","Attitude", "deep", "stra", "surf", "Points", "Interest", "high_points")
learn <- select(lrn14, one_of(keep_columns))
learn <- mutate(learn, high_points = att_points > 26)
learn <- mutate(learn, att_points = (Attitude + Points) / 2)
mean(learn$att_points)
learn <- mutate(learn, high_points = att_points > 26)
learn$high_points
keep_columns <- c("gender","Age","Attitude", "deep", "stra", "surf", "Points", "Interest", "high_points")
learn <- select(learn, one_of(keep_columns))
#Data wrangling here
library(dplyr); library(ggplot2)
# Hypothesis: people who on average get high points in exam and attitude towards statistics score high in interest
learn <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
str(learn)
#making variable Interest into the data set
learn <- mutate(learn, Interest = De + Dc)
learn$Interest
#Creating the varaibles deep, stra and surf like in exercises
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D07","D14","D22","D30")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
deep_columns <- select(learn, one_of(deep_questions))
learn$deep <- rowMeans(deep_columns)
surface_columns <- select(learn, one_of(surface_questions))
learn$surf <- rowMeans(surface_columns)
strategic_columns <- select(learn, one_of(strategic_questions))
learn$stra <- rowMeans(strategic_columns)
#Creating new variable att_points= average of attitude and points
learn <- mutate(learn, att_points = (Attitude + Points) / 2)
# Calculate mean 25.9071
mean(learn$att_points)
#Creating new variable high_points that is true if att_points is greater than 26 (above mean)
learn <- mutate(learn, high_points = att_points > 26)
learn$high_points
keep_columns <- c("gender","Age","Attitude", "deep", "stra", "surf", "Points", "Interest", "high_points")
learn <- select(learn, one_of(keep_columns))
summary(learn)
glimpse(learn)
#Load the data frame into .csv- file
write.csv(learn, "learn.csv", row.names = FALSE)
ncol(learn)<-new_names
new_names <- c("gender","age","attitude", "deep", "stra", "surf", "points", "interest", "high_points")
ncol(learn)<-new_names
colnames(learn)<-new_names
colnames(learn)
write.csv(learn, "learn.csv", row.names = FALSE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("CRAN")
install.packages("prettydoc")
